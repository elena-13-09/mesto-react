{"version":3,"sources":["utils/api.js","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/ImagePopup.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/PopupWithConfirm.js","components/App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["api","options","this","baseUrl","headers","res","ok","json","Promise","reject","status","fetch","method","then","_response","data","body","JSON","stringify","name","about","link","id","user","avatar","authorization","Header","className","src","logo","alt","CurrentUserContext","React","createContext","Card","props","currentUser","useContext","isOwn","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","onClick","onCardClick","type","onCardLike","length","onCardDelete","Main","onEditAvatar","onEditProfile","onAddPlace","cards","map","item","key","Footer","ImagePopup","isOpen","onClose","PopupWithForm","onSubmit","noValidate","title","children","isLoading","button","EditProfilePopup","useState","setName","description","setDescription","useEffect","e","preventDefault","onUpdateUser","onChange","target","value","placeholder","minLength","maxLength","pattern","required","EditAvatarPopup","avatarRef","useRef","current","onUpdateAvatar","ref","AddPlacePopup","setLink","PopupWithConfirm","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isConfirmPopupOpen","setIsConfirmPopupOpen","isZoomPopupOpen","setIsZoomPopupOpen","selectedCard","setSelectedCard","setCurrentUser","cardDelete","setCardDelete","setCards","setIsLoading","closeAllPopups","all","getUserInfo","getInitialCards","initialCards","catch","err","console","log","Provider","changeLikeCardStatus","newCard","newCards","c","editUserInfo","finally","editUserAvatar","addNewCard","deleteCard","filter","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.00b238ac.chunk.js","sourcesContent":["class Api {\n  constructor(options) {\n    this.baseUrl = options.baseUrl;\n    this.headers = options.headers;\n  }\n\n  //получить ответ\n  _response(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`error${res.status}`);\n  }\n\n  //получить массив карточек с сервера\n  getInitialCards() {\n    return fetch(`${this.baseUrl}/cards`, {\n      method: 'GET',\n      headers: this.headers,\n    })\n      .then(this._response)\n  }\n\n  //получить данные пользователя\n  getUserInfo() {\n    return fetch(`${this.baseUrl}/users/me`, {\n      method: 'GET',\n      headers: this.headers,\n    })\n      .then(this._response)\n  }\n\n  //обновить данные пользователя\n  editUserInfo(data) {\n    return fetch(`${this.baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this.headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      }),\n    })\n      .then(this._response)\n  }\n\n  //добавление новой карточки на сервер\n  addNewCard(data) {\n    return fetch(`${this.baseUrl}/cards`, {\n      method: 'POST',\n      headers: this.headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      }),\n    })\n      .then(this._response)\n  }\n\n  //удаление карточки\n  deleteCard(id) {\n    return fetch(`${this.baseUrl}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this.headers,\n    })\n      .then(this._response)\n  }\n\n  //добавление лайков\n  changeLikeCardStatus(id, status) {\n    return fetch(`${this.baseUrl}/cards/likes/${id}`, {\n      method: `${(status) ? `PUT` : `DELETE`}`,\n      headers: this.headers,\n    })\n      .then(this._response)\n  }\n\n  //редактирование аватара\n  editUserAvatar(user) {\n    return fetch(`${this.baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this.headers,\n      body: JSON.stringify({\n        avatar: user.avatar\n      })\n    })\n      .then(this._response)\n  }\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-13',\n  headers: {\n    authorization: 'f9d42d56-f132-43be-b723-625cd27ac059',\n    'Content-Type': 'application/json'\n  }\n})\n\nexport default api;\n","import React from 'react';\nimport logo from '../images/logo.svg';\n\nfunction Header() {\n    return (\n        <header className=\"header\">\n            <img className=\"header__logo\" src={logo} alt=\"Логотип. Россия. Место\" />\n        </header>\n    );\n}\n\nexport default Header;\n","import React from 'react';\n\nexport const CurrentUserContext = React.createContext();\n","import React from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Card(props) {\n  const currentUser = React.useContext(CurrentUserContext);\n  // Определяем, являемся ли мы владельцем текущей карточки\n  const isOwn = props.card.owner._id === currentUser._id;\n\n  // Создаём переменную, которую после зададим в `className` для кнопки удаления\n  const cardDeleteButtonClassName = (`${isOwn ? 'element__trash' : 'element__trash_hidden'}`);\n\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n  const isLiked = props.card.likes.some(i => i._id === currentUser._id);\n\n  // Создаём переменную, которую после зададим в `className` для кнопки лайка\n  const cardLikeButtonClassName = (`element__like ${isLiked ? 'element__like_active' : ''}`);;\n\n  function handleClick() {\n    props.onCardClick(props.card);\n  }\n\n  function handleLikeClick() {\n    props.onCardLike(props.card);\n  }\n\n  function handleDeleteClick() {\n    props.onCardDelete(props.card);\n  }\n\nreturn (\n    <div className=\"element\">\n      <img className=\"element__image\" src={props.card.link} alt={`${props.card.name}`} onClick={handleClick} />\n      <div className=\"element__cell\">\n        <h3 className=\"element__title\">{props.card.name}</h3>\n        <div className=\"element__like-cell\">\n          <button className={cardLikeButtonClassName} type=\"button\" onClick={handleLikeClick}></button>\n          <p className=\"element__like-number\">{props.card.likes.length}</p>\n        </div>\n      </div>\n      <button className={cardDeleteButtonClassName} type=\"button\" onClick={handleDeleteClick}></button>\n    </div>\n  );\n}\n\nexport default Card;\n\n\n","import React from 'react';\nimport Card from './Card';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Main(props) {\n    const currentUser = React.useContext(CurrentUserContext);\n\n    return (\n        <main className=\"content\">\n            <section className=\"profile\">\n                <div className=\"profile__avatar-cell\">\n                    <img className=\"profile__avatar\" alt=\"Аватарка\" src={currentUser.avatar} />\n                    <div className=\"profile__avatar-edit\" onClick={props.onEditAvatar}></div>\n                </div>\n                <div className=\"profile__info\">\n                    <div className=\"profile__cell\">\n                        <h1 className=\"profile__name\">{currentUser.name}</h1>\n                        <button className=\"profile__edit-button\" onClick={props.onEditProfile} type=\"button\"></button>\n                    </div>\n                    <p className=\"profile__profession\">{currentUser.about}</p>\n                </div>\n                <button className=\"profile__add-button\" onClick={props.onAddPlace} type=\"button\"></button>\n            </section>\n            <section className=\"elements\">\n                {props.cards.map((item) =>\n                    <Card\n                        key={item._id}\n                        card={item}\n                        onCardClick={props.onCardClick}\n                        onCardLike={props.onCardLike}\n                        onCardDelete={props.onCardDelete}\n                    />\n                )}\n            </section>\n        </main>\n    );\n}\n\nexport default Main;\n\n","import React from 'react';\n\nfunction Footer() {\n    return (\n        <footer className=\"footer\">\n            <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\n        </footer>\n    );\n}\n\nexport default Footer;\n","import React from 'react';\n\nfunction ImagePopup(props) {\n    return (\n        <section className={`popup popup_zoom ${props.isOpen && \"popup_opened\"}`}>\n            <figure className=\"popup__zoom-container\">\n                <button className=\"button__close button__close_zoom\" type=\"button\" onClick={props.onClose}></button>\n                <img className=\"popup__zoom-image\" src={props.card.link} alt={`${props.card.name}`} />\n                <h3 className=\"popup__zoom-title\">{props.card.name}</h3>\n            </figure>\n        </section>\n    );\n}\n\nexport default ImagePopup;\n","import React from 'react';\n\nfunction PopupWithForm(props) {\n  return (\n    <section className={`popup popup_${props.name} ${props.isOpen && \"popup_opened\"}`}>\n      <form className={`form__container form__container_${props.name}`} name={props.name} onSubmit={props.onSubmit} noValidate>\n        <button className=\"button__close\" type=\"button\" onClick={props.onClose}></button>\n        <h3 className=\"form__title\">{props.title}</h3>\n        {props.children}\n        <button className={`button__submit button__submit_${props.name}`} type=\"submit\">{props.isLoading ? 'Сохранение...' : props.button}</button>\n      </form>\n    </section>\n  );\n}\n\nexport default PopupWithForm;\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction EditProfilePopup(props) {\n  const currentUser = React.useContext(CurrentUserContext);\n\n  const [name, setName] = React.useState('');\n  const [description, setDescription] = React.useState('');\n  // После загрузки текущего пользователя из API\n  // его данные будут использованы в управляемых компонентах.\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n\n  function handleName(e) {\n    setName(e.target.value);\n  }\n\n  function handleDescription(e) {\n    setDescription(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    // Запрещаем браузеру переходить по адресу формы\n    e.preventDefault();\n    // Передаём значения управляемых компонентов во внешний обработчик\n    props.onUpdateUser({\n      name,\n      about: description,\n    });\n  }\n\n  return (\n    <PopupWithForm\n      title='Редактировать профиль'\n      name='profile'\n      button='Сохранить'\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleSubmit}\n      isLoading= 'Сохранение...'\n      >\n      <fieldset\n        className=\"form__field\">\n        <input\n          onChange={handleName}\n          value={name}\n          className=\"form__input form__input_name\"\n          type=\"text\"\n          name=\"name\"\n          id=\"name-input\"\n          placeholder=\"Имя\"\n          minLength=\"2\"\n          maxLength=\"40\"\n          pattern=\"^[A-Za-zА-ЯЁа-яё\\s-]+$\"\n          required\n        />\n        <span\n          className=\"form__input-error\"\n          id=\"name-input-error\">\n        </span>\n        <input\n          onChange={handleDescription}\n          value={description}\n          className=\"form__input form__input_profession\"\n          type=\"text\"\n          name=\"about\"\n          id=\"profession-input\"\n          placeholder=\"О себе\"\n          minLength=\"2\"\n          maxLength=\"200\"\n          required\n        />\n        <span\n          className=\"form__input-error\"\n          id=\"profession-input-error\">\n        </span>\n      </fieldset>\n    </PopupWithForm>\n  );\n}\nexport default EditProfilePopup;\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction EditAvatarPopup(props) {\n  const currentUser = React.useContext(CurrentUserContext);\n  const avatarRef = React.useRef();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    props.onUpdateAvatar({\n      avatar: avatarRef.current.value,\n    });\n  }\n\nReact.useEffect(() => {\n    avatarRef.current.value = '';\n  }, [currentUser]);\n\n  return (\n    <PopupWithForm\n      title='Обновить аватар'\n      name='avatar'\n      button='Создать'\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleSubmit}\n      isLoading={props.isLoading}>\n      <fieldset\n        className=\"form__field\">\n        <input\n          className=\"form__input form__input_link-avatar\"\n\n          ref={avatarRef}\n          type=\"url\"\n          name=\"link\"\n          id=\"link-input\"\n          placeholder=\"Ссылка на картинку\"\n          required\n        />\n        <span\n          className=\"form__input-error\"\n          id=\"link-input-error\">\n        </span>\n      </fieldset>\n    </PopupWithForm>\n  );\n}\n\nexport default EditAvatarPopup;\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction AddPlacePopup(props) {\n  const [name, setName] = React.useState('');\n  const [link, setLink] = React.useState('');\n\n  function handleName(e) {\n    setName(e.target.value);\n  }\n\n  function handleLink(e) {\n    setLink(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onAddPlace({\n      name: name,\n      link: link,\n    })\n  }\n\n  return (\n    <PopupWithForm\n      title='Новое место'\n      name='image'\n      button='Сохранить'\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleSubmit}\n      isLoading={props.isLoading}>\n      <fieldset\n        className=\"form__field\">\n        <input\n          className=\"form__input form__input_name-image\"\n          onChange={handleName}\n          type=\"text\"\n          name=\"name\"\n          id=\"image-input\"\n          placeholder=\"Название\"\n          minLength=\"1\"\n          maxLength=\"30\"\n          pattern=\"^[A-Za-zА-ЯЁа-яё\\s-]+$\"\n          required\n        />\n        <span\n          className=\"form__input-error\"\n          id=\"image-input-error\">\n        </span>\n        <input\n          className=\"form__input form__input_link-image\"\n          onChange={handleLink}\n          type=\"url\"\n          name=\"link\"\n          id=\"link-input\"\n          placeholder=\"Ссылка на картинку\"\n          required\n        />\n        <span\n          className=\"form__input-error\"\n          id=\"link-input-error\">\n        </span>\n      </fieldset>\n    </PopupWithForm>\n  );\n}\n\nexport default AddPlacePopup;\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction PopupWithConfirm(props) {\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onSubmit();\n  }\n  return (\n    <PopupWithForm\n      title='Вы уверены?'\n      name='confirm'\n      button='Да'\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleSubmit}\n    />\n  );\n}\n\nexport default PopupWithConfirm;\n","import React from 'react';\nimport api from '../utils/api';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport PopupWithConfirm from './PopupWithConfirm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isConfirmPopupOpen, setIsConfirmPopupOpen] = React.useState(false);\n  const [isZoomPopupOpen, setIsZoomPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState();\n  const [currentUser, setCurrentUser] = React.useState({ name: '', about: '', avatar: '' });\n  const [cardDelete, setCardDelete] = React.useState([]);\n  const [cards, setCards] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  React.useEffect(() => {\n    Promise.all([\n      api.getUserInfo(),\n      api.getInitialCards()\n    ])\n      .then(([user, initialCards]) => {\n        setCurrentUser(user);\n        setCards(initialCards);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  // Открытие попапов\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleConfirmPopupClick() {\n    setIsConfirmPopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(true);\n    setIsZoomPopupOpen(card);\n  }\n\n  function handleCardDelete(card) {\n    setCardDelete(card)\n    handleConfirmPopupClick();\n  }\n\n  // Закрытие попопов\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard(false);\n    setIsConfirmPopupOpen(false);\n  }\n\n  // Лайки\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n        const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n        // Обновляем стейт\n        setCards(newCards);\n      });\n  }\n\n  // Удаление карточки\n  function handleCardDeleteSubmit() {\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.deleteCard(cardDelete._id)\n      .then(() => {\n        // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n        const newCards = cards.filter((i) => i._id !== cardDelete._id);\n        // Обновляем стейт\n        setCards(newCards);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err)\n      });\n  }\n\n  // Редактирование профиля\n  function handleUpdateUser(user) {\n    setIsLoading(true);\n    api.editUserInfo(user)\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false)\n      });\n  }\n\n  // Изменение аватара\n  function handleUpdateAvatar(user) {\n    setIsLoading(true);\n    api.editUserAvatar(user)\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false)\n      });\n  }\n\n  // Добавление карточки\n  function handleAddPlaceSubmit(card) {\n    setIsLoading(true);\n    api.addNewCard(card)\n      .then((res) => {\n        setCards([...cards, res]);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false)\n      });\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        <Header />\n        <Main\n          onEditProfile={handleEditProfileClick}\n          onAddPlace={handleAddPlaceClick}\n          onEditAvatar={handleEditAvatarClick}\n          onCardClick={handleCardClick}\n          cards={cards}\n          onCardLike={handleCardLike}\n          onCardDelete={handleCardDelete}\n        />\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n          isLoading={isLoading}\n        />\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n          isLoading={isLoading}\n        />\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}\n          isLoading={isLoading}\n        />\n        <ImagePopup\n          isOpen={selectedCard}\n          card={isZoomPopupOpen}\n          onClose={closeAllPopups}\n        />\n        <PopupWithConfirm\n          isOpen={isConfirmPopupOpen}\n          onClose={closeAllPopups}\n          onSubmit={handleCardDeleteSubmit}\n        />\n        <Footer />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.855a8c98.svg\";"],"sourceRoot":""}