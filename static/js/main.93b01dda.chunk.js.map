{"version":3,"sources":["components/Header.js","utils/api.js","components/Card.js","components/Main.js","components/PopupWithForm.js","components/Footer.js","components/ImagePopup.js","components/App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","className","src","logo","alt","api","options","this","baseUrl","headers","res","ok","json","Promise","reject","status","fetch","method","then","_response","userName","userProfession","body","JSON","stringify","name","about","cardName","cardLink","link","id","userAvatar","avatar","authorization","Card","props","card","onClick","onCardClick","type","likes","length","Main","onEditAvatar","onEditProfile","onAddPlace","React","useState","setUserName","userDescription","setUserDescription","setUserAvatar","cards","setCards","useEffect","all","getUserInfo","getInitialCards","values","user","initialCards","catch","err","console","log","map","item","key","_id","PopupWithForm","isOpen","noValidate","onClose","title","children","button","Footer","ImagePopup","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isZoomPopupOpen","setIsZoomPopupOpen","selectedCard","setSelectedCard","closeAllPopups","placeholder","minLength","maxLength","pattern","required","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.93b01dda.chunk.js","sourcesContent":["import React from 'react';\r\nimport logo from '../images/logo.svg';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"header\">\r\n            <img className=\"header__logo\" src={logo} alt=\"Логотип. Россия. Место\" />\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","class Api {\n    constructor(options) {\n        this.baseUrl = options.baseUrl;\n        this.headers = options.headers;\n    }\n\n    //получить ответ\n    _response(res) {\n        if (res.ok) {\n            return res.json();\n        }\n        return Promise.reject(`error${res.status}`);\n    }\n\n    //получить массив карточек с сервера\n    getInitialCards() {\n        return fetch(`${this.baseUrl}/cards`, {\n            method: 'GET',\n            headers: this.headers,\n        })\n            .then(this._response)\n    }\n\n    //получить данные пользователя\n    getUserInfo() {\n        return fetch(`${this.baseUrl}/users/me`, {\n            method: 'GET',\n            headers: this.headers,\n        })\n            .then(this._response)\n    }\n\n    //обновить данные пользователя\n    editUserInfo(userName, userProfession) {\n        return fetch(`${this.baseUrl}/users/me`, {\n            method: 'PATCH',\n            headers: this.headers,\n            body: JSON.stringify({\n                name: userName,\n                about: userProfession,\n            }),\n        })\n            .then(this._response)\n    }\n\n    //добавление новой карточки на сервер\n    addNewCard(cardName, cardLink) {\n        return fetch(`${this.baseUrl}/cards`, {\n            method: 'POST',\n            headers: this.headers,\n            body: JSON.stringify({\n                name: cardName,\n                link: cardLink,\n            }),\n        })\n            .then(this._response)\n    }\n\n    //удаление карточки\n    deleteCard(id) {\n        return fetch(`${this.baseUrl}/cards/${id}`, {\n            method: 'DELETE',\n            headers: this.headers,\n        })\n            .then(this._response)\n    }\n\n    //добавление лайков\n    addLike(id) {\n        return fetch(`${this.baseUrl}/cards/likes/${id}`, {\n            method: 'PUT',\n            headers: this.headers\n        })\n            .then(this._response)\n    }\n\n    //удаление лайков\n    deleteLike(id) {\n        return fetch(`${this.baseUrl}/cards/likes/${id}`, {\n            method: 'DELETE',\n            headers: this.headers\n        })\n            .then(this._response)\n    }\n\n    //редактирование аватара\n    editUserAvatar(userAvatar) {\n        return fetch(`${this.baseUrl}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: this.headers,\n            body: JSON.stringify({\n                avatar: userAvatar\n            })\n        })\n            .then(this._response)\n    }\n}\n\nconst api = new Api({\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-13',\n    headers: {\n        authorization: 'f9d42d56-f132-43be-b723-625cd27ac059',\n        'Content-Type': 'application/json'\n    }\n})\n\nexport default api;\n","import React from 'react';\n\nfunction Card(props) {\n\n  function handleClick() {\n    props.onCardClick(props.card);\n  }\n\n  return (\n    <div className=\"element\">\n      <img className=\"element__image\" src={props.card.link} alt={`${props.card.name}`} onClick={handleClick} />\n      <div className=\"element__cell\">\n        <h3 className=\"element__title\">{props.card.name}</h3>\n        <div className=\"element__like-cell\">\n          <button className=\"element__like\" type=\"button\" />\n          <p className=\"element__like-number\">{props.card.likes.length}</p>\n        </div>\n      </div>\n      <button className=\"element__trash\" type=\"button\" />\n    </div>\n  );\n}\n\nexport default Card;\n","import React from 'react';\nimport api from '../utils/api';\nimport Card from './Card';\n\nfunction Main({ onEditAvatar, onEditProfile, onAddPlace, onCardClick }) {\n    const [userName, setUserName] = React.useState();\n    const [userDescription, setUserDescription] = React.useState();\n    const [userAvatar, setUserAvatar] = React.useState();\n    const [cards, setCards] = React.useState([]);\n\n    React.useEffect(() => {\n        Promise.all([\n            api.getUserInfo(),\n            api.getInitialCards()\n        ])\n            .then((values) => {\n                const [user, initialCards] = values;\n                setUserName(user.name);\n                setUserDescription(user.about);\n                setUserAvatar(user.avatar);\n                setCards(initialCards);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }, []);\n\n    return (\n        <main className=\"content\">\n            <section className=\"profile\">\n                <div className=\"profile__avatar-cell\">\n                    <img className=\"profile__avatar\" alt=\"Аватарка\" src={userAvatar} />\n                    <div className=\"profile__avatar-edit\" onClick={onEditAvatar}></div>\n                </div>\n                <div className=\"profile__info\">\n                    <div className=\"profile__cell\">\n                        <h1 className=\"profile__name\">{userName}</h1>\n                        <button className=\"profile__edit-button\" onClick={onEditProfile} type=\"button\"></button>\n                    </div>\n                    <p className=\"profile__profession\">{userDescription}</p>\n                </div>\n                <button className=\"profile__add-button\" onClick={onAddPlace} type=\"button\"></button>\n            </section>\n            <section className=\"elements\">\n                {cards.map((item) => (\n                    <Card\n                        key={item._id}\n                        card={item}\n                        onCardClick={onCardClick}\n                    />\n                ))}\n            </section>\n        </main>\n    );\n}\n\nexport default Main;\n","import React from 'react';\n\nfunction PopupWithForm(props) {\n  return (\n    <section className={`popup popup_${props.name} ${props.isOpen && \"popup_opened\"}`}>\n      <form className={`form__container form__container_${props.name}`} name={props.name} noValidate>\n        <button className=\"button__close\" type=\"button\" onClick={props.onClose}></button>\n        <h3 className=\"form__title\">{props.title}</h3>\n        {props.children}\n        <button className={`button__submit button__submit_${props.name}`} type=\"submit\">{props.button}</button>\n      </form>\n    </section>\n  );\n}\n\nexport default PopupWithForm;\n","import React from 'react';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nfunction ImagePopup(props) {\r\n    return (\r\n        <section className={`popup popup_zoom ${props.isOpen && \"popup_opened\"}`}>\r\n            <figure className=\"popup__zoom-container\">\r\n                <button className=\"button__close button__close_zoom\" type=\"button\" onClick={props.onClose}></button>\r\n                <img className=\"popup__zoom-image\" src={props.card.link} alt={`${props.card.name}`} />\r\n                <h3 className=\"popup__zoom-title\">{props.card.name}</h3>\r\n            </figure>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default ImagePopup;","import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport PopupWithForm from './PopupWithForm';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isZoomPopupOpen, setIsZoomPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState();\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(true);\n    setIsZoomPopupOpen(card);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard(false);\n  }\n\n  return (\n    <div className=\"page\">\n      <Header />\n      <Main\n        onEditProfile={handleEditProfileClick}\n        onAddPlace={handleAddPlaceClick}\n        onEditAvatar={handleEditAvatarClick}\n        onCardClick={handleCardClick}\n      />\n      <Footer />\n\n      <PopupWithForm\n        title='Редактировать профиль'\n        name='profile'\n        button='Сохранить'\n        isOpen={isEditProfilePopupOpen}\n        onClose={closeAllPopups}>\n        <fieldset className=\"form__field\">\n          <input className=\"form__input form__input_name\" type=\"text\" name=\"name\" id=\"name-input\"\n            placeholder=\"Имя\" minLength=\"2\" maxLength=\"40\" pattern=\"^[A-Za-zА-ЯЁа-яё\\s-]+$\" required\n          />\n          <span className=\"form__input-error\" id=\"name-input-error\"></span>\n          <input className=\"form__input form__input_profession\" type=\"text\" name=\"profession\" id=\"profession-input\"\n            placeholder=\"О себе\" minLength=\"2\" maxLength=\"200\" required\n          />\n          <span className=\"form__input-error\" id=\"profession-input-error\"></span>\n        </fieldset>\n      </PopupWithForm>\n\n      <PopupWithForm\n        title='Новое место'\n        name='image'\n        button='Сохранить'\n        isOpen={isAddPlacePopupOpen}\n        onClose={closeAllPopups}>\n        <fieldset className=\"form__field\">\n          <input className=\"form__input form__input_name-image\" type=\"text\" name=\"name\" id=\"image-input\"\n            placeholder=\"Название\" minLength=\"1\" maxLength=\"30\" pattern=\"^[A-Za-zА-ЯЁа-яё\\s-]+$\" required\n          />\n          <span className=\"form__input-error\" id=\"image-input-error\"></span>\n          <input className=\"form__input form__input_link-image\" type=\"url\" name=\"link\" id=\"link-input\"\n            placeholder=\"Ссылка на картинку\" required\n          />\n          <span className=\"form__input-error\" id=\"link-input-error\"></span>\n        </fieldset>\n      </PopupWithForm>\n\n      <PopupWithForm\n        title='Обновить аватар'\n        name='avatar'\n        button='Создать'\n        isOpen={isEditAvatarPopupOpen}\n        onClose={closeAllPopups}>\n        <fieldset className=\"form__field\">\n          <input className=\"form__input form__input_link-avatar\" type=\"url\" name=\"link\" id=\"link-input\"\n            placeholder=\"Ссылка на картинку\" required\n          />\n          <span className=\"form__input-error\" id=\"link-input-error\"></span>\n        </fieldset>\n      </PopupWithForm>\n\n      <PopupWithForm\n        title='Вы уверены?'\n        name='confirm'\n        button='Да'\n        onClose={closeAllPopups}\n      />\n\n      <ImagePopup\n        isOpen={selectedCard}\n        card={isZoomPopupOpen}\n        onClose={closeAllPopups}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.855a8c98.svg\";"],"sourceRoot":""}